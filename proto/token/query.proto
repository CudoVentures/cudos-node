syntax = "proto3";
package cudoventures.cudosnode.token;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "token/types.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/CudoVentures/cudos-node/x/token/types";

// Query defines the gRPC querier service.
service Query {
  // Queries a token by denom.
  rpc TokenByDenom(QueryTokenByDenomRequest) returns (QueryTokenByDenomResponse) {
  	option (google.api.http).get = "/CudoVentures/cudos-node/token/token/{denom}";
  }
  
  // Queries all available tokens.
  rpc AllTokens(QueryAllTokensRequest) returns (QueryAllTokensResponse) {
  	option (google.api.http).get = "/CudoVentures/cudos-node/token/token";
  }
}

message QueryTokenByDenomRequest {
  string denom = 1;
}

message QueryTokenByDenomResponse {
  Token token = 1 [(gogoproto.nullable) = false];
}

message QueryAllTokensRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTokensResponse {
  repeated Token tokens = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}